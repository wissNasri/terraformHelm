# Nom du fichier : .github/workflows/deploy-addons.yml
# DESCRIPTION : Pipeline pour déployer/détruire les add-ons Kubernetes.
#               La phase de destruction inclut maintenant le nettoyage des applications dépendantes.

name: "APPS: Deploy or Destroy Kubernetes Add-ons"

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/apps/**'
      - '.github/workflows/deploy-addons.yml'

  workflow_dispatch:
    inputs:
      action:
        description: 'Action : "apply" pour déployer, "destroy" pour supprimer'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  deploy-addons:
    name: "Terraform for Kubernetes Add-ons"
    runs-on: ["self-hosted", "aws-private-runner"] # S'exécute sur votre runner EC2

    defaults:
      run:
        shell: bash
        # Le répertoire de travail pour les commandes Terraform
        working-directory: ./terraform/apps

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure Kubeconfig for EKS
        run: |
          echo "Configuring kubectl to connect to EKS cluster..."
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name tws-eks-cluster
          echo "Kubeconfig configured successfully!"
          
          echo "--- Verifying cluster access ---"
          kubectl get nodes -o wide

      # ===================================================================
      # ÉTAPE AJOUTÉE : Nettoyage des applications AVANT la destruction
      # ===================================================================
      - name: "Pre-Destroy: Clean Up Kubernetes Applications"
        # Cette étape ne s'exécute QUE pour l'action 'destroy'
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: |
          echo "####################################################################"
          echo "### DÉBUT DU NETTOYAGE DES APPLICATIONS KUBERNETES (QUIZ)      ###"
          echo "####################################################################"

          echo "1. Suppression du namespace 'quiz' pour supprimer l'Ingress..."
          kubectl delete namespace quiz --ignore-not-found=true

          echo "2. ATTENTE DE 3 MINUTES pour la suppression de l'ALB par AWS..."
          sleep 180

          echo "####################################################################"
          echo "### FIN DU NETTOYAGE. DÉMARRAGE DE LA DESTRUCTION DES ADD-ONS. ###"
          echo "####################################################################"
        # On sort du répertoire de travail par défaut pour cette commande
        working-directory: ./

      # ===================================================================
      # Étapes Terraform existantes
      # ===================================================================
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        # On ne génère un plan que pour 'apply', pas pour 'destroy'
        if: github.event.inputs.action == 'apply'
        run: terraform plan -no-color -out=planfile

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve -input=false planfile

      - name: Terraform Destroy (DANGEROUS)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: |
          echo "WARNING: Preparing to destroy all add-ons managed by Terraform."
          terraform destroy -auto-approve
