# ===================================================================
# NOM DU FICHIER : .github/workflows/deploy-addons.yml
# VERSION FINALE - DESTRUCTION ROBUSTE
# ===================================================================

name: "APPS: Deploy or Destroy Kubernetes Add-ons"

on:
  push:
    branches: [main]
    paths: ['terraform/apps/**', '.github/workflows/deploy-addons.yml']
  pull_request:
    branches: [main]
    paths: ['terraform/apps/**', '.github/workflows/deploy-addons.yml']
  workflow_dispatch:
    inputs:
      action:
        description: 'Action: "apply" or "destroy"'
        required: true
        default: 'apply'
        type: choice
        options: [apply, destroy]
      confirm_destroy:
        description: 'If action=destroy, type "destroy-all-addons" to confirm.'
        required: false

jobs:
  deploy-addons:
    name: "Terraform for Kubernetes Add-ons"
    runs-on: ["self-hosted", "aws-private-runner"]
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/apps

    steps:
    # --- ÉTAPES DE CONFIGURATION ET DE DÉPLOIEMENT (INCHANGÉES) ---
    - name: Checkout source code 
      uses: actions/checkout@v4

    - name: Configure Kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region us-east-1 --name tws-eks-cluster
        echo "--- Kubeconfig configured. Verifying node access: ---"
        kubectl get nodes -o wide

    - name: Terraform Init
      run: terraform init

    - name: Apply Logic (for manual 'apply' trigger)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: |
        echo "--- Running Terraform Apply in two steps ---"
        echo "--- Step 1: Applying core add-ons ---"
        terraform apply -auto-approve -input=false -var="destroy_mode=false"
        
        echo "--- Waiting 30 seconds before deploying App-of-Apps ---"
        sleep 30
        
        echo "--- Step 2: Enabling and applying App-of-Apps ---"
        terraform apply -auto-approve -input=false -var="deploy_app_of_apps=true" -var="destroy_mode=false"

    - name: Validate Terraform Plan (on push to main)
      if: github.event_name == 'push'
      run: terraform plan -no-color

    # --- STRATÉGIE DE DESTRUCTION FINALE ---
    - name: "Phase 1: Destroy ALL Applications"
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.event.inputs.action == 'destroy' &&
        github.event.inputs.confirm_destroy == 'destroy-all-addons'
      run: |
        echo "--- [DESTROY - PHASE 1] Removing ALL applications by setting their count to 0... ---"
        # On lance un 'apply' qui va détruire TOUS les modules ayant la logique 'count'.
        terraform apply -auto-approve -var="destroy_mode=true" -var="deploy_app_of_apps=true"

    - name: "Phase 2: Final Destroy of All Remaining Infrastructure"
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.event.inputs.action == 'destroy' &&
        github.event.inputs.confirm_destroy == 'destroy-all-addons'
      run: |
        echo "--- [PAUSE] Waiting 120 seconds for all Pods and PVCs to terminate... ---"
        # On augmente la pause pour être sûr que TOUT est parti.
        sleep 120
        
        echo "--- Verifying cluster state before final destroy ---"
        echo "--- Checking Pods ---"
        kubectl get pods -A
        echo "--- Checking PVCs ---"
        kubectl get pvc -A
        
        echo "--- [DESTROY - PHASE 2] Destroying all remaining infrastructure add-ons... ---"
        # On lance un destroy final. Il ne devrait rester que les drivers et les rôles IAM.
        terraform destroy -auto-approve -var="deploy_app_of_apps=true"
