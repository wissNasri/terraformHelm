name: "APPS: Deploy Kubernetes Add-ons"

on:
  push:
    branches: [main]
    paths: ['terraform/apps/**', '.github/workflows/deploy-addons.yml']
  pull_request:
    branches: [main]
    paths: ['terraform/apps/**', '.github/workflows/deploy-addons.yml']
  workflow_dispatch:
    inputs:
      action:
        description: 'Action: "apply" pour déployer les add-ons'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply

jobs:
  deploy-addons:
    name: "Terraform for Kubernetes Add-ons"
    runs-on: ["self-hosted", "aws-private-runner"]
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/apps

    steps:
    # ===================================================================
    # ÉTAPES DE CONFIGURATION (S'EXÉCUTENT TOUJOURS)
    # ===================================================================
    - name: Checkout source code 
      uses: actions/checkout@v4

    - name: Configure Kubeconfig for EKS
      # Cette étape s'exécute maintenant pour tous les déclencheurs
      run: |
        aws eks update-kubeconfig --region us-east-1 --name tws-eks-cluster
        kubectl get nodes -o wide

    - name: Terraform Init
      # Cette étape s'exécute aussi pour tous les déclencheurs
      run: terraform init

    # ===================================================================
    # LOGIQUE DE DÉPLOIEMENT (APPLY) - Uniquement sur déclenchement manuel
    # ===================================================================
    - name: Terraform Apply (on manual dispatch)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: |
        echo "--- Starting Terraform Apply: Step 1 ---"
        terraform plan -no-color -out=plan-step1
        terraform apply -auto-approve -input=false plan-step1
        
        echo "--- Waiting 30 seconds before deploying the main application ---"
        sleep 30
        
        echo "--- Starting Terraform Apply: Step 2 (deploying app-of-apps) ---"
        terraform plan -no-color -out=plan-step2 -var="deploy_app_of_apps=true"
        terraform apply -auto-approve -input=false plan-step2

    # ===================================================================
    # VALIDATION - Uniquement pour les Pull Requests et Pushes
    # ===================================================================
    - name: Validate Terraform Plan (on push or pull_request)
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      run: terraform plan -no-color
