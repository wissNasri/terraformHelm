# Nom du fichier : .github/workflows/deploy-addons.yml
# DESCRIPTION : Pipeline pour déployer et détruire les add-ons Kubernetes,
#               avec un nettoyage explicite des namespaces applicatifs.

name: "APPS: Deploy or Destroy Kubernetes Add-ons"

on:
  # Se déclenche sur un push pour valider la configuration
  push:
    branches:
      - main
    paths:
      - 'terraform/apps/**'
      - '.github/workflows/deploy-addons.yml'

  # Permet un déclenchement manuel pour les actions de déploiement ou de destruction
  workflow_dispatch:
    inputs:
      action:
        description: 'Action à exécuter : "apply" pour déployer, "destroy" pour supprimer'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      confirm_destroy:
        description: 'Si action=destroy, tapez "destroy-all-addons" pour confirmer.'
        required: false

jobs:
  deploy-addons:
    name: "Terraform for Kubernetes Add-ons"
    
    runs-on: ["self-hosted", "aws-private-runner"]

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/apps

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout source code
        uses: actions/checkout@v4

      # Étape 2 : Configurer l'accès à Kubernetes
      - name: Configure Kubeconfig for EKS
        run: |
          echo "Configuring kubectl to connect to EKS cluster..."
          aws eks update-kubeconfig --region us-east-1 --name tws-eks-cluster
          echo "Kubeconfig configured successfully!"
          
          echo "--- Verifying cluster access ---"
          kubectl get nodes -o wide
          echo "--------------------------------"

      # Étape 3 : Initialiser Terraform
      - name: Terraform Init
        id: init
        run: terraform init

      # ===================================================================
      # LOGIQUE DE DÉPLOIEMENT (APPLY MANUEL)
      # ===================================================================

      - name: Plan and Apply Core Add-ons
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
        run: |
          echo "--- Planning core add-ons ---"
          terraform plan -no-color -out=plan-step1
          echo "--- Applying core add-ons ---"
          terraform apply -auto-approve -input=false plan-step1

      - name: Plan and Apply App-of-Apps
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
        run: |
          echo "--- Waiting 30 seconds for CRDs to be fully recognized ---"
          sleep 30
          echo "--- Planning App-of-Apps resource ---"
          terraform plan -no-color -out=plan-step2 -var="deploy_app_of_apps=true"
          echo "--- Applying App-of-Apps resource ---"
          terraform apply -auto-approve -input=false plan-step2

      # ===================================================================
      # LOGIQUE DE VALIDATION (PUSH)
      # ===================================================================

      - name: Validate Terraform Plan (on push)
        if: github.event_name == 'push'
        run: |
          echo "Validating base plan (without App-of-Apps)..."
          terraform plan -no-color

      # ===================================================================
      # LOGIQUE DE DESTRUCTION (DESTROY MANUEL)
      # ===================================================================

      # --- NOUVELLE ÉTAPE 6 : Nettoyage des namespaces applicatifs ---
      # S'exécute AVANT la destruction des add-ons pour garantir un nettoyage propre.
      - name: Clean Application Namespaces (if destroying)
        if: |
          github.event_name == 'workflow_dispatch' &&
          github.event.inputs.action == 'destroy' &&
          github.event.inputs.confirm_destroy == 'destroy-all-addons'
        run: |
          echo "--- Deleting 'quiz' and 'quiz-staging' namespaces ---"
          # La commande "delete" attendra que toutes les ressources soient supprimées.
          # L'option "|| true" empêche le workflow d'échouer si un namespace n'existe pas.
          kubectl get namespace quiz-staging -o json \
              | jq '.spec.finalizers = []' \
              | kubectl replace --raw "/api/v1/namespaces/quiz/finalize" -f -

          kubectl get namespace quiz -o json \
            | jq '.spec.finalizers = []' \
            | kubectl replace --raw "/api/v1/namespaces/quiz/finalize" -f -

          
          echo "--- Waiting for namespaces to be fully terminated ---"
          # On attend un peu pour laisser le temps aux finalizers de faire leur travail.
          sleep 90

      # Étape 7 : Détruit toutes les ressources Terraform
      - name: Terraform Destroy (DANGEROUS)
        if: |
          github.event_name == 'workflow_dispatch' &&
          github.event.inputs.action == 'destroy' &&
          github.event.inputs.confirm_destroy == 'destroy-all-addons'
        run: |
          echo "WARNING: Preparing to destroy all add-ons managed by Terraform."
          terraform destroy -auto-approve -var="deploy_app_of_apps=true"
