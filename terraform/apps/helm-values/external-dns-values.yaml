# ===================================================================
# Fichier de valeurs pour le chart Helm ExternalDNS (v1.19.0+)
# Prêt pour la production sur EKS avec IRSA.
# ===================================================================

# 1. Configuration du Provider (Fournisseur)
# -------------------------------------------------------------------
# Configuration pour AWS Route 53.
provider:
  name: aws
  aws:
    # La région où se trouve votre zone Route53.
    # La variable ${AWS_REGION} sera remplacée par Terraform.
    region: "${AWS_REGION}"
    # Type de zone à gérer (publique).
    zoneType: "public"

# 2. Sources des Noms d'Hôte
# -------------------------------------------------------------------
# ExternalDNS surveillera les ressources 'Ingress' pour trouver les noms de domaine.
sources:
  - ingress

# 3. Filtrage et Sécurité
# -------------------------------------------------------------------
# CRUCIAL : S'assure qu'ExternalDNS ne modifie que votre domaine.
domainFilters:
  - "iovision.site"

# Politique de gestion des enregistrements.
# 'sync' : Crée, met à jour et supprime les enregistrements pour qu'ils correspondent à l'état du cluster.
policy: sync

# Identifiant de propriétaire pour les enregistrements TXT.
# Permet à ExternalDNS de savoir quels enregistrements il gère et d'éviter de toucher
# à ceux créés manuellement. La variable ${HOSTED_ZONE_ID} sera remplacée par Terraform.
txtOwnerId: "${HOSTED_ZONE_ID}"

# 4. Configuration du Compte de Service (pour IRSA)
# -------------------------------------------------------------------
serviceAccount:
  # Le chart créera le ServiceAccount.
  create: true
  # Nom du ServiceAccount.
  name: "external-dns-sa"
  # Les annotations pour lier le rôle IAM seront injectées par Terraform via --set.
  annotations: {}

# 5. Déploiement et Ressources
# -------------------------------------------------------------------
# S'assure que le pod s'exécute sur des nœuds Linux.
nodeSelector:
  kubernetes.io/os: linux

# Définition des ressources pour le pod pour garantir la stabilité.
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi
